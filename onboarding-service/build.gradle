plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
    id("com.diffplug.spotless") version "6.25.0"
}


group = 'app.kubix'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.security:spring-security-crypto:6.2.1'
    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'org.ow2.util.base64:base64:2.0.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.0.2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.eclipse.angus:angus-mail:2.0.2'
    implementation 'org.postgresql:postgresql:42.7.2'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'ch.qos.logback:logback-core'
    implementation 'ch.qos.logback:logback-classic'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'commons-validator:commons-validator:1.9.0'

    implementation group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.32'
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.12'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.6'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    useJUnitPlatform()
}


spotless {
    java {
        trimTrailingWhitespace()
        indentWithSpaces(3)
        endWithNewline()
        removeUnusedImports()
        setEncoding('utf-8')
        eclipse()
    }
}

jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = layout.buildDirectory.dir("customJacocoReportDir")
}

tasks.test {
    finalizedBy(tasks.jacocoTestReport) // report is always generated after tests run
}
tasks.jacocoTestReport {
    dependsOn(tasks.test) // tests are required to run before generating the report
}

tasks.jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir("jacocoHtml")
    }
}

task checkWildcardImports {
    doLast {
        def javaFiles = fileTree('src/main/java').matching {
            include '**/*.java'
        }

        def problems = []

        javaFiles.each { file ->
            def lineNumber = 0
            file.eachLine { line ->
                lineNumber++
                if (line =~ /import\s+[^;]*\.\*\s*;/) {
                    problems << "${file.path}:${lineNumber}: $line"
                }
            }
        }

        if (problems) {
            throw new GradleException("Wildcard imports found:\n${problems.join('\n')}")
        }
    }
}

check.dependsOn 'spotlessJava', 'checkWildcardImports'

